---
import { getLanguageFromURL } from '../../languages.ts';
import { SIDEBAR } from '../../config.ts';
const { currentPage } = Astro.props;
const currentPageMatch = currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
// SIDEBAR is a flat array. Group it by sections to properly render.
const sidebarSections = SIDEBAR[langCode].reduce((col, item, i) => {
	// If the first item is not a section header, create a new container section.
	if (i === 0) {
		if (!item.header) {
			const pesudoSection = { text: "" };
			col.push({ ...pesudoSection, children: [] });
		}
	}
	if (item.header) {
		col.push({ ...item, children: [] });
	} else {
		col[col.length - 1].children.push(item);
	}
	return col;
}, []);

const isCurrentPage = (item) => {
	if (item.link) {
		return item.link.includes(currentPageMatch);
	}
	return false;
};

const getLinkClasses = (link) => {
	const baseClasses = "block py-2 px-6  my-1 transition-colors border-l hover:border-slate-400 text-slate-500 hover:text-slate-900"

	if (isCurrentPage(link)) {
		return baseClasses + " border-slate-500 text-slate-900";
	} else {
		return baseClasses;
	}
}
---
<aside title="Site Navigation">
<nav aria-labelledby="grid-left" class="w-64 p-4 border-r">
	<ul>
		{sidebarSections.map((section) => (
			<li>
				<div>
					<h2 class="text-slate-600 font-bold capitalize text-sm my-4">{section.text}</h2>
					<ul>
						{section.children.map((child) => (
							<li>
								<a
								class={` ${getLinkClasses(child)}`}
								 href={`${Astro.site.pathname}${child.link}`} aria-current={`${isCurrentPage(child) ? 'page' : 'false'}`}>
									{child.text}
								</a>
							</li>
						))}
					</ul>
				</div>
			</li>
		))}
	</ul>
</nav>
</aside>

<script is:inline>
	window.addEventListener('DOMContentLoaded', (event) => {
		var target = document.querySelector('[aria-current="page"]');
		if (target && target.offsetTop > window.innerHeight - 100) {
			document.querySelector('.nav-groups').scrollTop = target.offsetTop;
		}
	});
</script>

